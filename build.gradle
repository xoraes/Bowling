import com.sun.tools.javac.resources.compiler

/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ndhupia' at '2/22/14 2:30 PM' with Gradle 1.11
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.11/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:latest.release'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.6'
    compile 'com.google.code.gson:gson:latest.release'
    compile 'com.google.guava:guava:r09'
    compile 'org.mortbay.jetty:jetty:latest.release'
    compile 'org.mortbay.jetty:jetty-util:latest.release'
    compile 'org.mortbay.jetty:jetty-management:latest.release'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:latest.release'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
